services:
  php:
    build:
      context: .
      dockerfile: Dockerfile
    image: epay-php:production
    restart: unless-stopped
    env_file:
      - .env
    environment:
      APP_ROLE: app
    volumes:
      - app-code:/var/www/html
      - php-log:/var/log/php
    networks:
      - backend
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "php", "-r", "exit(extension_loaded('pdo_mysql') ? 0 : 1);"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

  nginx:
    image: nginx:1.25-alpine
    restart: unless-stopped
    depends_on:
      php:
        condition: service_started
    ports:
      - "${NGINX_PORT:-8080}:80"
    volumes:
      - app-code:/var/www/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-log:/var/log/nginx
    networks:
      - backend
      - public
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1/healthz | grep -q ok"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

  mysql:
    image: mysql:5.7
    restart: unless-stopped
    ports:
      - "${MYSQL_PORT:-3307}:3306"
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_INITDB_SKIP_TZINFO: 1
    command:
      - mysqld
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p\"$MYSQL_ROOT_PASSWORD\" --silent"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  scheduler:
    image: epay-php:production
    restart: unless-stopped
    env_file:
      - .env
    environment:
      APP_ROLE: scheduler
    volumes:
      - app-code:/var/www/html
    depends_on:
      php:
        condition: service_started
    networks:
      - backend

volumes:
  app-code:
  mysql-data:
  redis-data:
  php-log:
  nginx-log:

networks:
  backend:
    driver: bridge
  public:
    driver: bridge